<UserControl x:Class="DamageMeter.UI.PlayerStatsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:l="clr-namespace:DamageMeter.UI"
             xmlns:converters="clr-namespace:DamageMeter.UI.HUD.Converters"
             xmlns:extensions="clr-namespace:Nostrum.Extensions"
             mc:Ignorable="d"
             Focusable="False"
             Height="27"
             Background="Transparent"
             MouseLeftButtonDown="DragWindow"
             MouseEnter="OnMouseEnter"
             MouseLeave="OnMouseLeave"
             d:DataContext="{d:DesignInstance l:PlayerDamageViewModel}">
    <!--todo:PreviewMouseRightButtonDown="ShowSkills"-->
    <UserControl.Resources>
        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </UserControl.Resources>

    <Grid Focusable="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

        <!--DpsBar-->
        <Border x:Name="DpsIndicator"
                Focusable="False"
                Opacity="1"
                HorizontalAlignment="Left" VerticalAlignment="Stretch"
                Height="Auto" Width="Auto">
            <Border.Background>
                <LinearGradientBrush EndPoint="0 1">
                    <GradientStop Color="{Binding Role, Converter={converters:RoleToColorConverter Opacity=0}}" />
                    <GradientStop Color="{Binding Role, Converter={converters:RoleToColorConverter Opacity=.2}}" Offset="1" />
                </LinearGradientBrush>
            </Border.Background>
            <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0 1">
                    <GradientStop Color="{Binding Role, Converter={converters:RoleToColorConverter Opacity=0}}" Offset=".6" />
                    <GradientStop Color="{Binding Role, Converter={converters:RoleToColorConverter Opacity=.9}}" Offset="1" />
                </LinearGradientBrush>
            </Border.BorderBrush>
            <Grid>
                <Border x:Name="IndicatorGovernor" 
                        HorizontalAlignment="Left"
                        Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=l:PlayerStatsControl}}">
                    <Border.LayoutTransform>
                        <ScaleTransform ScaleX="0" />
                    </Border.LayoutTransform>
                </Border>
                <Border Background="{Binding Role, Converter={converters:RoleToColorConverter}}"
                        VerticalAlignment="Bottom"
                        Height="1"/>
            </Grid>
        </Border>

        <!--Stats-->
        <Grid x:Name="GridStats"
              Focusable="False"
              HorizontalAlignment="Center" 
              VerticalAlignment="Stretch">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Background" Value="Transparent" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsHovered, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=l:PlayerStatsControl}}"
                                     Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0 0" EndPoint="1 0">
                                        <GradientStop Color="Transparent" />
                                        <GradientStop Color="#1fff" Offset=".15" />
                                        <GradientStop Color="Transparent" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Name}" Value="Unknown damage">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Opacity" Value=".3" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="p0" Width="25" />
                <ColumnDefinition SharedSizeGroup="p01" Width="0" />
                <ColumnDefinition SharedSizeGroup="p1" MinWidth="90" Width="Auto" />
                <ColumnDefinition SharedSizeGroup="p2" Width="*" />
                <ColumnDefinition SharedSizeGroup="p3" MinWidth="45" Width="Auto" />
                <ColumnDefinition SharedSizeGroup="p4" MinWidth="70" Width="Auto" />
                <ColumnDefinition SharedSizeGroup="p5" MinWidth="45" Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <!--Class-->
            <Path x:Name="Class"
                  Data="{Binding Class, Converter={StaticResource ClassToSvg}}"
                  Focusable="False"
                  Fill="#ddd"
                  RenderOptions.BitmapScalingMode="HighQuality"
                  Stretch="Uniform"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Height="18" Width="18"
                  Margin="2 0 0 0" >
                <Path.Style>
                    <Style TargetType="Path">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsHovered, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=l:PlayerStatsControl}}" Value="True">
                                <!--<Setter Property="Visibility" Value="Collapsed"/>-->
                                <Setter Property="Opacity" Value=".5"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>

            <Button HorizontalContentAlignment="Right" VerticalContentAlignment="Top" Command="{Binding ShowSkillDetailsCommand}"
            >
<Button.Style>
    <Style TargetType="Button" BasedOn="{StaticResource ButtonMainStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsHovered, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=l:PlayerStatsControl}}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
                    </Style>
</Button.Style>

                <Path Style="{StaticResource PathBaseStyle}" 
                      Data="{StaticResource Svg.Detection}" Margin="3" Width="12" Height="12"
                      ></Path>
            </Button>

            <!--Name-->
            <TextBlock x:Name="LabelName"
                       ToolTip="{Binding FullName}"
                       Grid.Column="2"
                       TextTrimming="CharacterEllipsis"
                       Margin="2 0"
                       HorizontalAlignment="Left"
                       Foreground="White">
                <Run Text="{Binding Name, Mode=OneWay}" />
                <Run Text="{Binding Level, Mode=OneWay}"
                     Foreground="#888"
                     FontSize="11" />
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
                        <Setter Property="Effect" Value="{x:Null}" />
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding  Path=DataContext.(l:MainViewModel.BlurPlayerNames), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:MainWindow}}}"
                                Value="True">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect x:Name="blurEffect" Radius="7" KernelType="Box" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            
            <!--DamagePerc-->
            <TextBlock x:Name="LabelDamagePart"
                       Style="{StaticResource BaseTextBlockStyle}"
                       Text="{Binding DamagePerc}"
                       ToolTip="{Binding DamageDone}"
                       Foreground="#aaa"
                       Grid.Column="4" />

            <!--TrendArrow + DPS-->
            <StackPanel Orientation="Horizontal" Grid.Column="5">
                <StackPanel.Resources>
                    <Style x:Key="ArrowsStyle" TargetType="Polygon">
                        <Setter Property="Width" Value="8" />
                        <Setter Property="Margin" Value="-5 0 4 0" />
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Stretch" Value="Uniform" />
                        <Setter Property="RenderTransformOrigin" Value=".5 .5" />
                        <Setter Property="Points" Value="0,0 1,-1 2,0" />
                    </Style>
                </StackPanel.Resources>
                <!--TrendArrow-->
                <Polygon>
                    <Polygon.Style>
                        <Style TargetType="Polygon" BasedOn="{StaticResource ArrowsStyle}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Increasing}" Value="True">
                                    <Setter Property="Fill" Value="MediumSeaGreen" />
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Decreasing}" Value="True">
                                    <Setter Property="Fill" Value="{StaticResource RedLight}" />
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleY="-1" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Polygon.Style>
                </Polygon>
                <!--DPS-->
                <TextBlock x:Name="LabelDps"
                           Style="{StaticResource BaseTextBlockStyle}"
                           Text="{Binding GlobalDps}"
                           ToolTip="{Binding IndividualDps}" />
            </StackPanel>
            
            <!--CritRate-->
            <Button Grid.Column="6" 
                    VerticalAlignment="Stretch"
                    Command="{Binding SwitchCritModeCommand}"
                    Style="{StaticResource ButtonMainStyle}"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center">
                <TextBlock x:Name="LabelCritRate"
                           TextAlignment="Right">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource BaseTextBlockStyle}" TargetType="TextBlock">
                            <Setter Property="Foreground" Value="LightCoral" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CritMode}" Value="HealCritRate">
                                    <Setter Property="Foreground" Value="LawnGreen" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CritMode}" Value="DamageFromCrits">
                                    <Setter Property="Foreground" Value="DarkOrange" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                    <Run Text="{Binding CritRate, Mode=OneWay}"/>
                </TextBlock>
            </Button>
        </Grid>

    </Grid>
</UserControl>