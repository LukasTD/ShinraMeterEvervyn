<ui:ClickThrouWindow x:Class="DamageMeter.UI.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:ui="clr-namespace:DamageMeter.UI"
                     xmlns:controls="clr-namespace:DamageMeter.UI.Controls"
                     xmlns:windows="clr-namespace:DamageMeter.UI.Windows"
                     xmlns:l="clr-namespace:Lang;assembly=Lang"
                     xmlns:extensions="clr-namespace:Nostrum.Extensions"
                     xmlns:game="clr-namespace:Tera.Game;assembly=Tera.Core"
                     mc:Ignorable="d"
                     UseLayoutRounding="True"
                     Icon="{Binding WindowIcon}"
                     Title="{Binding WindowTitle}"
                     Background="#01000000"
                     MinHeight="60" MinWidth="219"
                     Loaded="MainWindow_OnLoaded"
                     Closed="MainWindow_OnClosed"
                     MouseEnter="MainWindow_OnMouseEnter"
                     MouseLeave="MainWindow_OnMouseLeave"
                     d:DataContext="{d:DesignInstance ui:MainViewModel}">
    <Window.Resources>
        <Style x:Key="EmptyModeButtonPathStyle" TargetType="Path" BasedOn="{StaticResource PathBaseStyle}">
            <Setter Property="Height" Value="19" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Width" Value="Auto" />
        </Style>
        <Style x:Key="FooterButtonPathStyle" TargetType="Path" BasedOn="{StaticResource PathBaseStyle}">
            <Setter Property="Margin" Value="3" />
        </Style>
        <Style x:Key="FooterButtonSvgLedStyle" TargetType="windows:SvgLed">
            <Setter Property="Margin" Value="3" />
            <Setter Property="OnBrush" Value="White" />
            <Setter Property="OffBrush" Value="White" />
        </Style>
        <Style x:Key="EmptyModeButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonMainStyle}">
            <Setter Property="extensions:ButtonExtensions.CornerRadius" Value="18" />
            <Setter Property="Height" Value="36" />
            <Setter Property="Width" Value="36" />
            <Setter Property="Margin" Value="10 0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ClickThru}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FooterButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonContentOpacityStyle}">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Margin" Value="3" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="#8F000000" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}" MaxWidth="600" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Foreground" Value="White" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            Name="Border"
                            Padding="3"
                            BorderThickness="1"
                            SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#1fff" />
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter Property="BorderThickness" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <!--<Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#29df" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid HorizontalAlignment="Left" MinWidth="265"
          Margin="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=AllowsTransparency, Converter={StaticResource BoolToMargin}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.LayoutTransform>
            <ScaleTransform CenterX="0" CenterY="0"
                            ScaleX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}"
                            ScaleY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}" />
        </Grid.LayoutTransform>
        <Border
            BorderBrush="{StaticResource KrBorderColor}"
            Grid.RowSpan="5" x:Name="BackgroundBorder"
            Opacity="{Binding WindowOpacity}">
            <Border.Style>
                <Style BasedOn="{StaticResource MainBorder}" TargetType="Border">
                    <Setter Property="Background" Value="{StaticResource KrBgColor}" />
                    <Setter Property="BorderThickness" Value="1" />

                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding UserPaused}" Value="False" />
                                <Condition Binding="{Binding Paused}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="DarkRed" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        <Border
            BorderBrush="{StaticResource KrBorderColor}"
            Grid.Row="5" x:Name="BackgroundBorder2"
            Margin=" 1 0 1 1"
            Opacity="{Binding WindowOpacity}">
            <Border.Style>
                <Style BasedOn="{StaticResource MainBorder}" TargetType="Border">
                    <Setter Property="Background" Value="{StaticResource KrBgColorDark}" />
                    <Setter Property="BorderThickness" Value="0 0 0 0" />
                </Style>
            </Border.Style>
        </Border>

        <Grid Grid.Row="0" Name="EGrid" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ComboBox x:Name="ListEncounter"
                      Grid.Column="0"
                      HorizontalAlignment="Stretch" VerticalAlignment="Top"
                      HorizontalContentAlignment="Left"
                      Margin="0"
                      MinHeight="29" Height="5"
                      MinWidth="205" Width="Auto"
                      ui:ComboBoxBehavior.FixWin10HilightBug="True"
                      ItemsSource="{Binding Encounters}"
                      SelectedItem="{Binding SelectedEncounter}"
                      DropDownClosed="ListEncounter_OnDropDownClosed"
                      DropDownOpened="ListEncounter_OnDropDownOpened"
                      SelectionChanged="ListEncounter_OnSelectionChanged"
                      PreviewKeyDown="ListEncounterOnPreviewKeyDown">
                <ComboBox.ItemTemplate>
                    <!--TODO: use EncounterViewModel-->
                    <DataTemplate DataType="game:NpcEntity">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border Width="8" Height="4" CornerRadius="2" VerticalAlignment="Center" Margin="2 0 2 0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="Coral" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Info.Boss}" Value="False">
                                                <Setter Property="Background" Value="DeepSkyBlue" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Info.Name}"
                                                         Value="{x:Static l:LP.TotalEncounter}">
                                                <Setter Property="Background" Value="SlateGray" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>

                                </Border.Style>
                            </Border>
                            <TextBlock Margin="2 0" Grid.Column="1">
                                <Run Text="{Binding Info.Name, Mode=OneWay}">
                                    <Run.Style>
                                        <Style TargetType="Run">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Info.Name}"
                                                             Value="{x:Static l:LP.TotalEncounter}">
                                                    <Setter Property="FontWeight" Value="DemiBold" />
                                                    <Setter Property="Foreground" Value="#888" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Run.Style>
                                </Run>
                                <Run Foreground="#888" Text="{Binding Info.Area, Mode=OneWay}" />
                            </TextBlock>
                        </Grid>

                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

        </Grid>
        <!--General stats-->
        <Grid Grid.Row="1" Name="SGrid" HorizontalAlignment="Stretch" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Style="{StaticResource ButtonMainStyle}"
                    Command="{Binding ChangeTimeLeftCommand}"
                    HorizontalContentAlignment="Left"
                    HorizontalAlignment="Left"
                    Cursor="Hand"
                    VerticalContentAlignment="Bottom">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Path Data="{StaticResource Svg.Timer}"
                          HorizontalAlignment="Center" VerticalAlignment="Center"
                          Stretch="Uniform" Margin="5 5 5 5" Height="16">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Setter Property="Fill" Value="#5fff" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowTimeLeft}" Value="True">
                                        <Setter Property="Fill" Value="Coral" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>

                    </Path>

                    <TextBlock Focusable="False" x:Name="Timer" HorizontalAlignment="Left"
                               Grid.Column="1" FontSize="13"
                               VerticalAlignment="Center" Height="Auto" Width="Auto"
                               TextAlignment="Center" Margin="0 0 5 0"
                               Text="{Binding TimerText}" />
                </Grid>
            </Button>
            <Grid HorizontalAlignment="Left" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Path Grid.Column="0" Data="{StaticResource Svg.Sword}" HorizontalAlignment="Center"
                      VerticalAlignment="Center" Stretch="Uniform" Margin="5" Fill="#5fff" Height="16" />

                <TextBlock Focusable="False" x:Name="PartyDps"
                           HorizontalAlignment="Left"
                           Grid.Column="1" FontSize="13"
                           Text="{Binding TotalDpsText}"
                           Foreground="White"
                           VerticalAlignment="Center" Height="Auto" Width="Auto"
                           TextAlignment="Center" />
            </Grid>
            <Grid HorizontalAlignment="Left" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Path Grid.Column="0" Data="{StaticResource Svg.HeartHalfFull}" HorizontalAlignment="Center"
                      VerticalAlignment="Center" Stretch="Uniform" Margin="5" Fill="#5fff" Height="16" />
                <TextBlock Focusable="False" x:Name="TotalDamage" HorizontalAlignment="Left" Grid.Column="1"
                           FontSize="13"
                           Foreground="White"
                           Text="{Binding TotalDamageText}"
                           VerticalAlignment="Center" Height="Auto" Width="Auto"
                           TextAlignment="Center" />
            </Grid>
            <Path Grid.ColumnSpan="3" Margin="5" HorizontalAlignment="Right" Width="16" Height="16" Stretch="Uniform"
                  x:Name="QueuedPacketsLed" Fill="{Binding QueuedPackets, Converter={StaticResource LoadToColor}}"
                  ToolTip="Overload. When red, notification functions will be temporarily disabled"
                  Data="{StaticResource Svg.Warning}" />
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HideGeneralData}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <Grid Grid.RowSpan="2" VerticalAlignment="Stretch">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEmpty}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <TextBlock HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Foreground="#9fff"
                       TextAlignment="Left"
                       Margin="20 0">
                <Run FontSize="16" Text="Shinra Meter" />
                <LineBreak />
                <windows:SvgLed IsOn="{Binding Connected}"
                                VerticalAlignment="Center"
                                OnGeometry="{StaticResource Svg.WifiOn}"
                                OffGeometry="{StaticResource Svg.WifiOff}"
                                OnBrush="LightSeaGreen"
                                OffBrush="#5fff"
                                OffMargin="0 1 0 0"
                                OnMargin="0 1 0 -1"
                                Margin="0 1 0 -1"
                                Height="14"
                                Width="14" />
                <Run FontSize="12" Text="{Binding ConnectionStatusText, Mode=OneWay}" Foreground="#5fff"
                     BaselineAlignment="Center" />
            </TextBlock>


            <Button HorizontalAlignment="Right"
                    Command="{Binding VerifyCloseCommand}"
                    Style="{StaticResource EmptyModeButtonStyle}">
                <Path
                    Style="{StaticResource EmptyModeButtonPathStyle}"
                    Data="{StaticResource Svg.Power}"
                    Fill="#ff55" />
            </Button>
            <Button Margin="50 0"
                    HorizontalAlignment="Right"
                    Command="{Binding OpenSettingsCommand}"
                    Style="{StaticResource EmptyModeButtonStyle}">
                <Path
                    Style="{StaticResource EmptyModeButtonPathStyle}"
                    Data="{StaticResource Svg.Settings}"
                    Fill="#9fff" />
            </Button>

            <windows:SvgLed IsOn="{Binding ClickThru}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            OnGeometry="{StaticResource Svg.MouseOff}"
                            OnBrush="LightSkyBlue"
                            Opacity=".8"
                            Margin="3 0"
                            Height="14"
                            Width="14" />


        </Grid>
        <!--Players-->
        <ScrollViewer x:Name="Scroller" Grid.Row="2" VerticalScrollBarVisibility="Auto"
                      Margin="1"
                      MaxHeight="{Binding NumberOfPlayersDisplayed, Converter={StaticResource PlayersCountToSize}}">
            <ItemsControl Name="PlayersIC"
                          ItemsSource="{Binding PlayersView}"
                          Background="Transparent"
                          BorderThickness="0"
                          Focusable="False"
                          IsTextSearchEnabled="False"
                          HorizontalAlignment="Stretch" Grid.IsSharedSizeScope="True">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="ui:PlayerDamageViewModel">
                        <ui:PlayerStatsControl />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        <!--Messages-->
        <TextBlock Grid.Row="3" Margin="5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center"
                   Name="TooSlow"
                   Background="Transparent" Foreground="Yellow"
                   Text="{x:Static l:LP.Your_computer_is_too_slow}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Paused}" Value="True" />
                                <Condition Binding="{Binding UserPaused}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>

        </TextBlock>
        <TextBlock Grid.Row="3" Margin="5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center"
                   Name="WaitingMapChange"
                   Background="Transparent" Foreground="#f55" Text="{x:Static l:LP.WaitingMapChange}"
                   FontWeight="DemiBold">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WaitingMapChangeTBVisibile}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>

        </TextBlock>
        <TextBlock Grid.Row="3" Margin="5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center"
                   Name="UserPaused"
                   Background="Transparent">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding UserPaused}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
            <Run Text="{x:Static l:LP.UserPaused}" Foreground="#aaa" />
            <LineBreak />
            <Run FontWeight="DemiBold" Foreground="#f55" Text="Change map or relog after resuming meter" />

        </TextBlock>
        <!--Graph-->
        <Grid Grid.Row="4">
            <Grid.Style>
                <Style TargetType="FrameworkElement">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsGraphVisible}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <controls:RealtimeGraph x:Name="Graph"
                                    MouseEnter="OnGraphMouseEnter"
                                    MouseLeave="OnGraphMouseLeave"
                                    DataContext="{Binding GraphData}" />
        </Grid>
        <!--Footer-->
        <UniformGrid Rows="1" Grid.Row="5" Name="Footer" Height="0" Margin="0">

            <!--Blur button-->
            <ToggleButton x:Name="HideNames"
                          ToolTip="{x:Static l:LP.Blur_player_names}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Style="{StaticResource ToggleButtonStyle}"
                          IsChecked="{Binding BlurPlayerNames}"
                          Height="25"
                          Margin="0 3 3 3">
                <Path Style="{StaticResource PathBaseStyle}"
                      Data="{StaticResource Svg.HideNames}"
                      Margin="6" />
            </ToggleButton>


            <!--Adds button-->
            <Button Command="{Binding ToggleAddsCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource FooterButtonStyle}" TargetType="Button">
                        <Setter Property="ToolTip" Value="{x:Static l:LP.MainWindow_Only_boss}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowAdds}" Value="True">
                                <Setter Property="ToolTip" Value="{x:Static l:LP.MainWindow_Boss_Adds}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <windows:SvgLed IsOn="{Binding ShowAdds}"
                                Style="{StaticResource FooterButtonSvgLedStyle}"
                                OnGeometry="{StaticResource Svg.ShowAdds}"
                                OffGeometry="{StaticResource Svg.OnlyBoss}" />
            </Button>
            <!--Stats button-->
            <Button Command="{Binding ShowEntityStatsCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource FooterButtonStyle}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedEncounter.Info.Name}"
                                         Value="{x:Static l:LP.TotalEncounter}">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Path Style="{StaticResource FooterButtonPathStyle}"
                      Data="{StaticResource Svg.EntityStats}" />
            </Button>

            <!--<windows:FooterButton Command="{Binding ShowUploadHistoryCommand}"
                                  Margin="3"
                                  Height="25"
                                  ToolTip="{x:Static l:LP.SystemTray_Site_export}"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.History}" />-->
            <!--<windows:FooterButton Command="{Binding ShowBossHPBarCommand}"
                                  ToolTip="{x:Static l:LP.BossHP}"
                                  Margin="3"
                                  Height="25"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.HPBar}" />-->

            <!--Settings button-->
            <Button Command="{Binding OpenSettingsCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource FooterButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Path Style="{StaticResource FooterButtonPathStyle}"
                      Data="{StaticResource Svg.Settings}" />

            </Button>

            <!--Pause button-->
            <Button Command="{Binding TogglePauseCommand}"
                    Style="{StaticResource FooterButtonStyle}">
                <windows:SvgLed IsOn="{Binding UserPaused}"
                                OnGeometry="{StaticResource Svg.Play}"
                                OffGeometry="{StaticResource Svg.Pause}"
                                Style="{StaticResource FooterButtonSvgLedStyle}" />
            </Button>

            <!--Close button-->
            <Button Command="{Binding VerifyCloseCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource FooterButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Path Style="{StaticResource FooterButtonPathStyle}"
                      Data="{StaticResource Svg.Power}"
                      Fill="#ff55"
                      Margin="3 3 5 3" />

            </Button>

        </UniformGrid>

    </Grid>
</ui:ClickThrouWindow>